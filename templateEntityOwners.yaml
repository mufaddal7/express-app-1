apiVersion: backstage.io/v1beta2
kind: Template
metadata:
  name: Options-demo-nodejs-standard
  title: Options Demo Node.js Service deployable to EKS
  description: Create a new Demo Node.js Service
  tags:
    - nodejs
    - helm
    - demo
spec:
  owner: team-a
  type: service
  parameters:
    - title: Configure Your Demo Node.js Service
      required:
        - service_name
        - owner
        - docker_namespace
      properties:
        service_name:
          title: Service Name
          type: string
          description: Unique service name. Eg random-nodejs-service
          ui:autofocus: true
        EntityOwner:
          title: Owned Only
          type: string
          description: System of the component
          ui:field: OwnedEntityPicker
        EntityAll:
          title: All Entities
          type: string
          description: System of the component
          ui:field: EntityPicker
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - gitlab.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./
        values:
          service_name: '{{ parameters.service_name }}'
          owner: '{{ parameters.owner }}'
          docker_namespace: '{{ parameters.docker_namespace }}'
    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        allowedHosts: ['gitlab.com']
        description: 'A simple "Hello World" node.js application deployable to EKS'
        repoUrl: '{{ parameters.repoUrl }}'
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: '{{ steps.publish.output.repoContentsUrl }}'
        catalogInfoPath: '/catalog-info.yaml'
  output:
    remoteUrl: '{{ steps.publish.output.remoteUrl }}'
    entityRef: '{{ steps.register.output.entityRef }}'

